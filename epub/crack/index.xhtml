<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <title>crack</title>
    <link rel="stylesheet" type="text/css" href="../_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="../_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="crack">
<h1>crack</h1>
<section id="typora-1-3-6">
<h2>Typora破解(1.3.6)</h2>
<iframe src="https://xqy2006.github.io/dist-pages/license.html?dayRemains=15&amp;index=0&amp;hasActivated=true&amp;email=This_is_my_Email&amp;license=This_is_my_License_Code&amp;lang=zh-Hans&amp;needLicense=false&amp;type=1&amp;os=win" style="
    width: 525px;
    height: 420px;
"></iframe><section id="js">
<h3>1. 抓取解密后js：</h3>
<div class="highlight-powershell notranslate"><div class="highlight"><pre><span></span><span class="n">pip</span> <span class="n">install</span> <span class="n">frida</span>
<span class="n">frida</span> <span class="s2">&quot;D:\Program Files\Typora\Typora.exe&quot;</span> <span class="n">-l</span> <span class="s2">&quot;./unpack.js&quot;</span>
</pre></div>
</div>
<p>unpack.js:</p>
<div class="highlight-javascript notranslate"><div class="highlight"><pre><span></span><span class="kd">let</span><span class="w"> </span><span class="nx">napi_create_string_utf8</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">Module</span><span class="p">.</span><span class="nx">getExportByName</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;napi_create_string_utf8&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">var</span><span class="w"> </span><span class="nx">index</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mf">0</span><span class="p">;</span><span class="w"></span>
<span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">napi_create_string_utf8</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;绑定成功&#39;</span><span class="p">);</span><span class="w"></span>
<span class="w">    </span><span class="nx">Interceptor</span><span class="p">.</span><span class="nx">attach</span><span class="p">(</span><span class="nx">napi_create_string_utf8</span><span class="p">,</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">        </span><span class="nx">onEnter</span><span class="o">:</span><span class="w"> </span><span class="kd">function</span><span class="w"> </span><span class="p">(</span><span class="nx">args</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">            </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;napi_create_string_utf8&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;调用&#39;</span><span class="p">,</span><span class="w"> </span><span class="nx">args</span><span class="p">[</span><span class="mf">0</span><span class="p">],</span><span class="w"> </span><span class="nx">args</span><span class="p">[</span><span class="mf">1</span><span class="p">].</span><span class="nx">readCString</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mf">0</span><span class="p">,</span><span class="w"> </span><span class="mf">100</span><span class="p">),</span><span class="w"> </span><span class="nx">args</span><span class="p">[</span><span class="mf">2</span><span class="p">],</span><span class="w"> </span><span class="nx">args</span><span class="p">[</span><span class="mf">3</span><span class="p">]);</span><span class="w"></span>
<span class="w"> </span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="nx">args</span><span class="p">[</span><span class="mf">2</span><span class="p">].</span><span class="nx">toInt32</span><span class="p">()</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mf">100</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="c1">// 过滤出大文件</span><span class="w"></span>
<span class="w">                </span><span class="nx">index</span><span class="w"> </span><span class="o">+=</span><span class="w"> </span><span class="mf">1</span><span class="p">;</span><span class="w"></span>
<span class="w">                </span><span class="kd">var</span><span class="w"> </span><span class="nx">f</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="ow">new</span><span class="w"> </span><span class="nx">File</span><span class="p">(</span><span class="s1">&#39;export_&#39;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="nb">String</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s1">&#39;.js&#39;</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;wb&#39;</span><span class="p">);</span><span class="w"></span>
<span class="w">                </span><span class="nx">f</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">args</span><span class="p">[</span><span class="mf">1</span><span class="p">].</span><span class="nx">readByteArray</span><span class="p">(</span><span class="nx">args</span><span class="p">[</span><span class="mf">2</span><span class="p">].</span><span class="nx">toInt32</span><span class="p">()));</span><span class="w"></span>
<span class="w">                </span><span class="nx">f</span><span class="p">.</span><span class="nx">flush</span><span class="p">();</span><span class="w"></span>
<span class="w">                </span><span class="nx">f</span><span class="p">.</span><span class="nx">close</span><span class="p">();</span><span class="w"></span>
<span class="w"> </span>
<span class="w">            </span><span class="p">}</span><span class="w"></span>
<span class="w">        </span><span class="p">}</span><span class="w"></span>
<span class="w">    </span><span class="p">});</span><span class="w"></span>
<span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;绑定失败&#39;</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>
</pre></div>
</div>
</section>
<section id="jsatom-js-rsa-public-keybase64-renew">
<h3>2. 将解包出来最大的js重命名为Atom.js，找到以下代码替换RSA Public Key的base64，删除renew：</h3>
<div class="highlight-javascript notranslate"><div class="highlight"><pre><span></span><span class="nx">T</span><span class="o">=</span><span class="nb">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">Buffer</span><span class="p">.</span><span class="kr">from</span><span class="p">(</span><span class="s2">&quot;WyItLS0tLUJFR0lOIFBVQkxJQyBLRVktLS0tLSIsIk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBek9KOFBXTkxSbkpST3Y1UzhZcFIiLCJ5TVkrMFQwRlZjY2drMEQ1Z3N6YlE3N01WYzlwd2grYmEvenE4aUV4SjdVZ3dsN2FjNHd5MnAvVkJRMms1ZzJqIiwiZVI5TFRoRG9kNXRzWnhmYmppK0lHTGN1SkJCY3J0d3dDeWl6U1JTVTNFbHVoZm1kck9PRHdEUnQvYWxrdFhDaSIsIlQ5Si9JMG03UGcwdTJvaDFXYjY0WndWSDRsVEpaTFByZk8waXhFRjcrSGl1ZytWWi9oMFRnLzZOTjJNaGZJRFciLCIwQk56cUw5dmFZSXhsdUdSaWM2dE5Ra240SGFWZFFGODF2K1hsL1FjRHc2T05MNkFrUEF2TkI1ZGZENm4zb2IyIiwiZjNNMWlySU9PVlZZb3Z0b0ErMXBOTDJLUEsrNE94M3lSSEZWUmlBNms2NXduNlg3anNWNWpDdWdoQ2dyVVhjRiIsIlV3SURBUUFCIiwiLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tIiwiIiwiIl0=&quot;</span><span class="p">,</span><span class="s2">&quot;base64&quot;</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="s2">&quot;utf8&quot;</span><span class="p">))</span><span class="w"></span>

<span class="c1">//删除下面的/api/client/renew</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">a</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">await</span><span class="w"> </span><span class="p">(</span><span class="k">await</span><span class="w"> </span><span class="nx">k</span><span class="p">(</span><span class="nx">W</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s2">&quot;/api/client/renew&quot;</span><span class="p">,</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">	</span><span class="nx">method</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;POST&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">	</span><span class="nx">cache</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;no-cache&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">	</span><span class="nx">body</span><span class="o">:</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="w"></span>
<span class="w">	</span><span class="nx">headers</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">		</span><span class="s2">&quot;Content-Type&quot;</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;application/json&quot;</span><span class="p">,</span><span class="w"></span>
<span class="w">		</span><span class="s2">&quot;Cache-Control&quot;</span><span class="o">:</span><span class="w"> </span><span class="s2">&quot;no-cache&quot;</span><span class="w"></span>
<span class="w">		</span><span class="p">}</span><span class="w"></span>
<span class="w">	</span><span class="p">}</span><span class="w"></span>
</pre></div>
</div>
</section>
<section id="app-asar">
<h3>3. 解包app.asar：</h3>
<div class="highlight-powershell notranslate"><div class="highlight"><pre><span></span><span class="n">npm</span> <span class="n">install</span> <span class="n">asar</span> <span class="n">-g</span>
<span class="nb">cd </span><span class="n">D</span><span class="p">:\</span><span class="n">Program</span> <span class="n">Files</span><span class="p">\</span><span class="n">Typora</span><span class="p">\</span><span class="n">resources</span>
<span class="n">asar</span> <span class="n">extract</span> <span class="p">./</span><span class="n">app</span><span class="p">.</span><span class="n">asar</span> <span class="p">./</span><span class="n">app</span>
</pre></div>
</div>
</section>
<section id="atom-jsd-program-files-typora-resources-app">
<h3>4. 将刚刚修改好的Atom.js替换“D:\Program Files\Typora\resources\app\”下的同名文件</h3>
</section>
<section id="d-program-files-typora-resources-app-asar">
<h3>5. 删除“D:\Program Files\Typora\resources\”下的“app.asar”</h3>
</section>
<section id="keygen">
<h3>6. 编写keygen</h3>
<p>RSA公私钥生成：</p>
<div class="highlight-javascript notranslate"><div class="highlight"><pre><span></span><span class="kd">const</span><span class="w"> </span><span class="nx">crypto</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;crypto&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">fs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;path&#39;</span><span class="p">);</span><span class="w"></span>
<span class="w"> </span>
<span class="kd">const</span><span class="w"> </span><span class="nx">keyPair</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">crypto</span><span class="p">.</span><span class="nx">generateKeyPairSync</span><span class="p">(</span><span class="s1">&#39;rsa&#39;</span><span class="p">,</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">   </span><span class="nx">modulusLength</span><span class="o">:</span><span class="w"> </span><span class="mf">2048</span><span class="p">,</span><span class="w"></span>
<span class="w">   </span><span class="nx">publicKeyEncoding</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">      </span><span class="nx">type</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;spki&#39;</span><span class="p">,</span><span class="w"></span>
<span class="w">      </span><span class="nx">format</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;pem&#39;</span><span class="w"></span>
<span class="w">   </span><span class="p">},</span><span class="w"></span>
<span class="w">   </span><span class="nx">privateKeyEncoding</span><span class="o">:</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">      </span><span class="nx">type</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;pkcs8&#39;</span><span class="p">,</span><span class="w"></span>
<span class="w">      </span><span class="nx">format</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;pem&#39;</span><span class="p">,</span><span class="w"></span>
<span class="w">   </span><span class="p">}</span><span class="w"></span>
<span class="p">});</span><span class="w"></span>
<span class="w"> </span>
<span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="s2">&quot;public_key.pem&quot;</span><span class="p">,</span><span class="w"> </span><span class="nx">keyPair</span><span class="p">.</span><span class="nx">publicKey</span><span class="p">);</span><span class="w"></span>
<span class="nx">fs</span><span class="p">.</span><span class="nx">writeFileSync</span><span class="p">(</span><span class="s2">&quot;private_key.pem&quot;</span><span class="p">,</span><span class="w"> </span><span class="nx">keyPair</span><span class="p">.</span><span class="nx">privateKey</span><span class="p">);</span><span class="w"></span>
</pre></div>
</div>
<p>keygen:</p>
<div class="highlight-javascript notranslate"><div class="highlight"><pre><span></span><span class="kd">const</span><span class="w"> </span><span class="nx">crypto</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;crypto&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">fs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;fs&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;path&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">root</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">__dirname</span><span class="p">;</span><span class="w"></span>
<span class="kd">function</span><span class="w"> </span><span class="nx">doEnc</span><span class="p">(</span><span class="nx">MachineCode</span><span class="p">,</span><span class="w"> </span><span class="nx">email</span><span class="p">,</span><span class="w"> </span><span class="nx">license</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">mc</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">Buffer</span><span class="p">.</span><span class="kr">from</span><span class="p">(</span><span class="nx">MachineCode</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;base64&#39;</span><span class="p">).</span><span class="nx">toString</span><span class="p">());</span><span class="w"></span>
<span class="w">    </span><span class="kd">var</span><span class="w"> </span><span class="nx">signInfo</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nx">fingerprint</span><span class="o">:</span><span class="w"> </span><span class="nx">mc</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="w"> </span><span class="nx">email</span><span class="p">,</span><span class="w"> </span><span class="nx">license</span><span class="p">,</span><span class="w"> </span><span class="nx">type</span><span class="o">:</span><span class="w"> </span><span class="s1">&#39;1&#39;</span><span class="w"> </span><span class="p">};</span><span class="w"></span>
<span class="w">    </span><span class="k">return</span><span class="w"> </span><span class="nb">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">signInfo</span><span class="p">);</span><span class="w"></span>
<span class="p">}</span><span class="w"></span>

<span class="kd">const</span><span class="w"> </span><span class="nx">privateKey</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">root</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39;./private_key.pem&#39;</span><span class="p">)).</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;ascii&#39;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">code</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">doEnc</span><span class="p">(</span><span class="s2">&quot;eyJ2Ijoid2lufDEuMy42IiwiaSI6IjhqT0VscDBXamsiLCJsIjoiTEFQVE9QLTVBUEZHOTM3IHwgMjYwMTkgfCBXaW5kb3dzIn0=&quot;</span><span class="p">,</span><span class="s2">&quot;Crack_By_Xuqinyang&quot;</span><span class="p">,</span><span class="s2">&quot;Crack_By_Xuqinyang&quot;</span><span class="p">);</span><span class="w"></span>
<span class="kd">const</span><span class="w"> </span><span class="nx">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nx">crypto</span><span class="p">.</span><span class="nx">privateEncrypt</span><span class="p">(</span><span class="nx">privateKey</span><span class="p">,</span><span class="w"> </span><span class="nx">Buffer</span><span class="p">.</span><span class="kr">from</span><span class="p">(</span><span class="nx">code</span><span class="p">)).</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">);</span><span class="w"></span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;+&quot;</span><span class="o">+</span><span class="nx">key</span><span class="p">);</span><span class="w"></span>
</pre></div>
</div>
</section>
<section id="id1">
<h3>7. 将keygen生成的注册码输入到离线注册窗口并注册</h3>
<iframe src="https://xqy2006.github.io/dist-pages/license.html?dayRemains=15&amp;index=0&amp;hasActivated=true&amp;email=This_is_my_Email&amp;license=This_is_my_License_Code&amp;lang=zh-Hans&amp;needLicense=false&amp;type=1&amp;os=win" style="
    width: 525px;
    height: 420px;
"></iframe></section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>